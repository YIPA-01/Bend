{"ast":null,"code":"import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectCards(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on\n  } = _ref;\n  extendParams({\n    cardsEffect: {\n      slideShadows: true,\n      rotate: true,\n      perSlideRotate: 2,\n      perSlideOffset: 8\n    }\n  });\n  const setTranslate = () => {\n    const {\n      slides,\n      activeIndex\n    } = swiper;\n    const params = swiper.params.cardsEffect;\n    const {\n      startTranslate,\n      isTouched\n    } = swiper.touchEventsData;\n    const currentTranslate = swiper.translate;\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      const slideProgress = slideEl.progress;\n      const progress = Math.min(Math.max(slideProgress, -4), 4);\n      let offset = slideEl.swiperSlideOffset;\n      if (swiper.params.centeredSlides && !swiper.params.cssMode) {\n        swiper.wrapperEl.style.transform = \"translateX(\".concat(swiper.minTranslate(), \"px)\");\n      }\n      if (swiper.params.centeredSlides && swiper.params.cssMode) {\n        offset -= slides[0].swiperSlideOffset;\n      }\n      let tX = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n      let tY = 0;\n      const tZ = -100 * Math.abs(progress);\n      let scale = 1;\n      let rotate = -params.perSlideRotate * progress;\n      let tXAdd = params.perSlideOffset - Math.abs(progress) * 0.75;\n      const slideIndex = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.from + i : i;\n      const isSwipeToNext = (slideIndex === activeIndex || slideIndex === activeIndex - 1) && progress > 0 && progress < 1 && (isTouched || swiper.params.cssMode) && currentTranslate < startTranslate;\n      const isSwipeToPrev = (slideIndex === activeIndex || slideIndex === activeIndex + 1) && progress < 0 && progress > -1 && (isTouched || swiper.params.cssMode) && currentTranslate > startTranslate;\n      if (isSwipeToNext || isSwipeToPrev) {\n        const subProgress = (1 - Math.abs((Math.abs(progress) - 0.5) / 0.5)) ** 0.5;\n        rotate += -28 * progress * subProgress;\n        scale += -0.5 * subProgress;\n        tXAdd += 96 * subProgress;\n        tY = \"\".concat(-25 * subProgress * Math.abs(progress), \"%\");\n      }\n      if (progress < 0) {\n        // next\n        tX = \"calc(\".concat(tX, \"px + (\").concat(tXAdd * Math.abs(progress), \"%))\");\n      } else if (progress > 0) {\n        // prev\n        tX = \"calc(\".concat(tX, \"px + (-\").concat(tXAdd * Math.abs(progress), \"%))\");\n      } else {\n        tX = \"\".concat(tX, \"px\");\n      }\n      if (!swiper.isHorizontal()) {\n        const prevY = tY;\n        tY = tX;\n        tX = prevY;\n      }\n      const scaleString = progress < 0 ? \"\".concat(1 + (1 - scale) * progress) : \"\".concat(1 - (1 - scale) * progress);\n      const transform = \"\\n        translate3d(\".concat(tX, \", \").concat(tY, \", \").concat(tZ, \"px)\\n        rotateZ(\").concat(params.rotate ? rotate : 0, \"deg)\\n        scale(\").concat(scaleString, \")\\n      \");\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowEl = slideEl.querySelector('.swiper-slide-shadow');\n        if (!shadowEl) {\n          shadowEl = createShadow(params, slideEl);\n        }\n        if (shadowEl) shadowEl.style.opacity = Math.min(Math.max((Math.abs(progress) - 0.5) / 0.5, 0), 1);\n      }\n      slideEl.style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = \"\".concat(duration, \"ms\");\n      el.querySelectorAll('.swiper-slide-shadow').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = \"\".concat(duration, \"ms\");\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements\n    });\n  };\n  effectInit({\n    effect: 'cards',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => true,\n    overwriteParams: () => ({\n      watchSlidesProgress: true,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","map":{"version":3,"names":["createShadow","effectInit","effectTarget","effectVirtualTransitionEnd","getSlideTransformEl","EffectCards","_ref","swiper","extendParams","on","cardsEffect","slideShadows","rotate","perSlideRotate","perSlideOffset","setTranslate","slides","activeIndex","params","startTranslate","isTouched","touchEventsData","currentTranslate","translate","i","length","slideEl","slideProgress","progress","Math","min","max","offset","swiperSlideOffset","centeredSlides","cssMode","wrapperEl","style","transform","concat","minTranslate","tX","tY","tZ","abs","scale","tXAdd","slideIndex","virtual","enabled","from","isSwipeToNext","isSwipeToPrev","subProgress","isHorizontal","prevY","scaleString","shadowEl","querySelector","opacity","zIndex","round","targetEl","setTransition","duration","transformElements","map","forEach","el","transitionDuration","querySelectorAll","effect","perspective","overwriteParams","watchSlidesProgress","virtualTranslate"],"sources":["/Users/redayahyani/Desktop/life/Bend/xolio/node_modules/swiper/modules/effect-cards/effect-cards.js"],"sourcesContent":["import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectCards({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    cardsEffect: {\n      slideShadows: true,\n      rotate: true,\n      perSlideRotate: 2,\n      perSlideOffset: 8\n    }\n  });\n  const setTranslate = () => {\n    const {\n      slides,\n      activeIndex\n    } = swiper;\n    const params = swiper.params.cardsEffect;\n    const {\n      startTranslate,\n      isTouched\n    } = swiper.touchEventsData;\n    const currentTranslate = swiper.translate;\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      const slideProgress = slideEl.progress;\n      const progress = Math.min(Math.max(slideProgress, -4), 4);\n      let offset = slideEl.swiperSlideOffset;\n      if (swiper.params.centeredSlides && !swiper.params.cssMode) {\n        swiper.wrapperEl.style.transform = `translateX(${swiper.minTranslate()}px)`;\n      }\n      if (swiper.params.centeredSlides && swiper.params.cssMode) {\n        offset -= slides[0].swiperSlideOffset;\n      }\n      let tX = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n      let tY = 0;\n      const tZ = -100 * Math.abs(progress);\n      let scale = 1;\n      let rotate = -params.perSlideRotate * progress;\n      let tXAdd = params.perSlideOffset - Math.abs(progress) * 0.75;\n      const slideIndex = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.from + i : i;\n      const isSwipeToNext = (slideIndex === activeIndex || slideIndex === activeIndex - 1) && progress > 0 && progress < 1 && (isTouched || swiper.params.cssMode) && currentTranslate < startTranslate;\n      const isSwipeToPrev = (slideIndex === activeIndex || slideIndex === activeIndex + 1) && progress < 0 && progress > -1 && (isTouched || swiper.params.cssMode) && currentTranslate > startTranslate;\n      if (isSwipeToNext || isSwipeToPrev) {\n        const subProgress = (1 - Math.abs((Math.abs(progress) - 0.5) / 0.5)) ** 0.5;\n        rotate += -28 * progress * subProgress;\n        scale += -0.5 * subProgress;\n        tXAdd += 96 * subProgress;\n        tY = `${-25 * subProgress * Math.abs(progress)}%`;\n      }\n      if (progress < 0) {\n        // next\n        tX = `calc(${tX}px + (${tXAdd * Math.abs(progress)}%))`;\n      } else if (progress > 0) {\n        // prev\n        tX = `calc(${tX}px + (-${tXAdd * Math.abs(progress)}%))`;\n      } else {\n        tX = `${tX}px`;\n      }\n      if (!swiper.isHorizontal()) {\n        const prevY = tY;\n        tY = tX;\n        tX = prevY;\n      }\n      const scaleString = progress < 0 ? `${1 + (1 - scale) * progress}` : `${1 - (1 - scale) * progress}`;\n      const transform = `\n        translate3d(${tX}, ${tY}, ${tZ}px)\n        rotateZ(${params.rotate ? rotate : 0}deg)\n        scale(${scaleString})\n      `;\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowEl = slideEl.querySelector('.swiper-slide-shadow');\n        if (!shadowEl) {\n          shadowEl = createShadow(params, slideEl);\n        }\n        if (shadowEl) shadowEl.style.opacity = Math.min(Math.max((Math.abs(progress) - 0.5) / 0.5, 0), 1);\n      }\n      slideEl.style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements\n    });\n  };\n  effectInit({\n    effect: 'cards',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => true,\n    overwriteParams: () => ({\n      watchSlidesProgress: true,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}